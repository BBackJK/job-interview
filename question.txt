1. hash map 에 대한 설명
- 데이터를 키와 값으로 관리하는 자료구조
- [키]라는 값으로 데이터를 관리하여
- 데이터 저장은 느리지만 많은 양의 데이터를 검색하는데 좋다



2. array vs liked list
- array는 -random access를 지원. 
- element들을 index를 통해 직접적으로 접근 가능.
- 저장이 느리다.

- liked list는 sequential access를 지원.
- 조회는 느리다.
- 저장이 빠르다.

3. 만든 프로젝트를 OSI 7 layer를 이용해서 설명하기
물데네전세표응

데이터링크 계층 - MAC 계층과 LLC 계층이 존재. (스위치)
네트워크 계층 - 라우팅을 이용하여 패킷 전송. (라우터) (IP)
전송 계층 - 최종 시스템 및 호스트 간의 데이터 전송을 담당. 보낼 데이터의 용량, 속도, 목적디 등을 처리
(TCP / UDP) 
세션 계층 - 세션을 생성 및 관리.
표현 계층 - 응용프로그램이나 네트워크를 위해 데이터를 '표현'하는 것. (암호화, 복호화)
응용 계층 - 응용프로그램.

[http는 tcp기반]

4. TCP/IP
tcp는 신뢰를 보장으로 하는 전송 기법. 3 way hand shaking.
udp는 신뢰를 보장으로 하지 않는 전송 기법.

5. 피보나치 수열 함수 , 난수를 모아서 최대값, 평균값 구하기 (1초에 한번씩 실행됨.)

6. 부동소수점에 관한 질문
변수에 실수를 저장할 때는 어느 정도의 정보 손실이 일어남.
가장 중요한 것은 실수 변수는 절대 정확한 값을 가지고 있지 않다는 것.

* 주의할 점
- 문제를 풀 때는 float보다는 double
- 정수가 들어있는 실수형 변수를 정수로 바로 캐스팅 하지 말아라. (1을 double로 대입하면 0.9999..같은 숫자가 나옴. 이를 정수 캐스팅하면 0이 나옴.)
- 비교 연산을 할 때는 등호를 사용하지 말아라. (오차가 있기 때문에)
- 큰 수를 다룰 때, 매우 작은 상수값을 사용하는 것은 위험할 수 있다. (double형 변수를 가지고 넓은 범위의 이진탐색을 돌릴 때 자주 발생하는 문제.)
- 큰 수에 작은 수를 더할 때 조심. (10^20 정도 되는 double형 변수에 1을 10^20번 더해도 값이 변하지 않는다.)

7. call by reference, call by value에 관한 질문
- call by reference : 매개 변수의 원래 주소에 값을 저장하는 방식. (클래스 객체를 인수로 전달한 경우)
 >> 포인터를 활용
- call by value : 인수로 기본 데이터형을 사용. 주어진 값을 복사하여 저리하는 방식. (메서드 내의 처리 결과는 메서드 밖에 있는 변수에 영향을 미치지 않는다.)
 >> 값에 의한 호출은 값만을 형식 인수에 복사하기 때문에, 실 인수와는 아무런 상관이 없다. 


8. 트리에 관한 질문
